function checkMove(
  board: string[][],
  rMove: number,
  cMove: number,
  color: string
): boolean {
  let m = board.length;
  let n = board[0].length;
  let dir = [
    [0, 1],
    [1, 0],
    [0, -1],
    [1, 1],
    [-1, 0],
    [-1, -1],
    [-1, 1],
    [1, -1],
  ];
  for (const d of dir) {
    let x = d[0] + rMove;
    let y = d[1] + cMove;
    let cnt = 1;
    let flag = false;
    // 继续往这个方向找一个坐标,直到找到颜色相同的
    while (x >= 0 && x < m && y >= 0 && y < n) {
      if (board[x][y] == ".") {
        cnt = 0;
        break;
      }
      if (board[x][y] == color) {
        cnt++;
        flag = true;
        break;
      }
      cnt++;
      x = x + d[0];
      y = y + d[1];
    }
    if (cnt >= 3 && flag) return true;
  }
  return false;
}
console.log(
  checkMove(
    [
      [".", ".", ".", "B", ".", ".", ".", "."],
      [".", ".", ".", "W", ".", ".", ".", "."],
      [".", ".", ".", "W", ".", ".", ".", "."],
      [".", ".", ".", "W", ".", ".", ".", "."],
      ["W", "B", "B", ".", "W", "W", "W", "B"],
      [".", ".", ".", "B", ".", ".", ".", "."],
      [".", ".", ".", "B", ".", ".", ".", "."],
      [".", ".", ".", "W", ".", ".", ".", "."],
    ],
    4,
    3,
    "B"
  )
);

console.log(
  checkMove(
    [
      [".", ".", ".", ".", ".", ".", ".", "."],
      [".", "B", ".", ".", "W", ".", ".", "."],
      [".", ".", "W", ".", ".", ".", ".", "."],
      [".", ".", ".", "W", "B", ".", ".", "."],
      [".", ".", ".", ".", ".", ".", ".", "."],
      [".", ".", ".", ".", "B", "W", ".", "."],
      [".", ".", ".", ".", ".", ".", "W", "."],
      [".", ".", ".", ".", ".", ".", ".", "B"],
    ],
    4,
    4,
    "W"
  )
);
console.log(
  checkMove(
    [
      [".", ".", "W", ".", "B", "W", "W", "B"],
      ["B", "W", ".", "W", ".", "W", "B", "B"],
      [".", "W", "B", "W", "W", ".", "W", "W"],
      ["W", "W", ".", "W", ".", ".", "B", "B"],
      ["B", "W", "B", "B", "W", "W", "B", "."],
      ["W", ".", "W", ".", ".", "B", "W", "W"],
      ["B", ".", "B", "B", ".", ".", "B", "B"],
      [".", "W", ".", "W", ".", "W", ".", "W"],
    ],
    5,
    4,
    "W"
  )
);
